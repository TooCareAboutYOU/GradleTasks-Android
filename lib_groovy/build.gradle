import groovy.json.JsonSlurper

plugins {
    //发布插件：https://docs.gradle.org/8.0.2/userguide/publishing_gradle_plugins.html
    id 'com.gradle.plugin-publish' version '1.1.0'
//    id 'java-library-convention'
    id 'groovy-gradle-plugin'
    id 'java-gradle-plugin'
//    id 'java-platform'
    id 'maven-publish'
    id 'java-library'
    id 'groovy'
    id 'kotlin'
    id 'base'
}

group('com.lib.groovy')
version('1.0.0')

//打包apk上传到蒲公英，并发通知到钉钉
apply from: "${rootProject.rootDir}/tasks_http/Tasks-Pgy.gradle"
//打包apk上传到蒲公英，并发通知到钉钉
apply from: "${rootProject.rootDir}/tasks_http/Tasks-FirIm.gradle"


gradlePlugin {
    plugins {
        androids {
            id = 'zs.plugin.lib.groovy'
            implementationClass = 'PluginStudy'
        }
    }
}


sourceCompatibility JavaVersion.VERSION_17
targetCompatibility JavaVersion.VERSION_17

sourceSets {
    main {
        groovy.srcDirs = ['src/main/groovy']
        java.srcDirs = ['src/main/java']
    }
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

dependencies {
    implementation gradleApi()
//    implementation localGroovy()
//    implementation 'org.codehaus.groovy:groovy:3.0.13'
}

tasks.withType(Test).configureEach {
    if (project.hasProperty('createReports')) {
        System.out.println("configureEach：before-1 " + System.currentTimeMillis())
        def jsonStr = '{"name":"Tom","age":20,"friends":["Jerry","Spike"]}'
        def json = new JsonSlurper().parseText(jsonStr)
        System.out.println("输出：name= " + json.name + ", age= " + json.age + ", friends= " + json.friends)
        System.out.println("configureEach：after-2 " + System.currentTimeMillis())
    }
}
tasks.withType(JavaCompile).configureEach {
    System.out.println("运行了.....");
    options.fork = true
    options.incremental = true
}

tasks.withType(GroovyCompile).configureEach {
    System.out.println('哈哈哈哈...');
}