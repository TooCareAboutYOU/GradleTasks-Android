pluginManagement {
    repositories {
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        google()
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        maven {
            allowInsecureProtocol = true
            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        }

//        maven { url 'https://raw.githubusercontent.com/martinloren/AabResGuard/mvn-repo' }
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        google()
        jcenter()
        mavenCentral()
        maven {
            allowInsecureProtocol = true
            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        }
    }
}
rootProject.name = "GradleTasks-Android"
include ':app'
include ':lib_groovy'
include ':pluginLibrary'
//调试模式
//includeBuild('pluginLibrary')


//各个模块
//gradle.allprojects {
//    beforeEvaluate {
//        println("---Gradle：settingsEvaluated Settings对象评估完毕 " + project.name)
//    }
//
//    afterEvaluate {
//        println("---Gradle：projectsLoaded 准备加载Project对象了-2 " + project.name)
//    }
//}
//
//gradle.addProjectEvaluationListener(new ProjectEvaluationListener() {
//    @Override
//    void beforeEvaluate(Project project) {
//        println("ProjectEvaluationListener --->>> beforeEvaluate " + project.name)
//    }
//
//    @Override
//    void afterEvaluate(Project project, ProjectState state) {
//        println("ProjectEvaluationListener --->>> afterEvaluate " + project.name)
//    }
//})

//gradle.addBuildListener(new BuildListener() {
//    @Override
//    void settingsEvaluated(Settings settings) {
//        println("BuildListener --->>> settingsEvaluated")
//    }
//
//    @Override
//    void projectsLoaded(Gradle gradle) {
//        println("BuildListener --->>> projectsLoaded")
//    }
//
//    @Override
//    void projectsEvaluated(Gradle gradle) {
//        println("BuildListener --->>> projectsEvaluated")
//    }
//
//    @Override
//    void buildFinished(BuildResult buildResult) {
//        println("BuildListener --->>> buildFinished")
//    }
//})
